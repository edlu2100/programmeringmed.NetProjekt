@model programmeringmed.NetProjekt.Models.WorkoutModel

@{
    ViewData["Title"] = "Details";
}

<div class="w">
<div class="end flex justify-content-between"> <!-- Använd justify-content-between för att placera barnen längst till höger -->
    <h1>Details</h1>
    <div class="detend"> <!-- Ta bort ml-auto och lämna bara detend klassen -->
        <div class="d-flex align-items-center">
            <a asp-action="Edit" asp-route-id="@Model?.Id" class="d-flex align-items-center">
                <img class="mx-2 mb-1" src="/Images/edit.png" alt="">
                <span>Edit</span>
            </a>
        </div>
        <div class="d-flex align-items-center">
            <a asp-action="Delete" asp-route-id="@Model?.Id" class="d-flex align-items-center">
                <img class="mx-2" src="/Images/close.png" alt="">
                <span>Delete</span>
            </a>
        </div>
    </div>
    <hr />
</div>

    <div class="">

        <dl class="row">
            <dt class="col-sm-2">
                Date of session
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Date)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Comment)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Comment)
            </dd>
           <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Rating)
            </dt>
            <dd class="col-sm-10">
                @{
                    switch (Model.Rating)
                    {
                        case 1:
                            @Html.Raw("Terrible")
                            break;
                        case 2:
                            @Html.Raw("Bad")
                            break;
                        case 3:
                            @Html.Raw("Okay")
                            break;
                        case 4:
                            @Html.Raw("Good")
                            break;
                        case 5:
                            @Html.Raw("Awesome")
                            break;
                        default:
                            @Html.Raw("Unknown")
                            break;
                    }
                }
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Length)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Length)
            </dd>

            @if (Model.ExerciseFormId == 1 && Model.Condition != null) // Kondition
            {
                <dt class="col-sm-2">
                    Konditionsmetod
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Condition.ConditionForm.ConditionName)
                </dd>
            }
            else if (Model.ExerciseFormId == 2) // Gym
            {
                <dt class="col-sm-2">
                    Body part
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.BodyPart.BodyPart)
                </dd>
            }
            else if (Model.ExerciseFormId == 3) // Skidåkning
            {
                <dt class="col-sm-2">
                    Location
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Location)
                </dd>
                <dt class="col-sm-2">
                    Organization
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Organization.OrganizationName)
                </dd>
                <dt class="col-sm-2">
                    Discipline
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Discipline.DisciplineName)
                </dd>

                <dt class="col-sm-2">
                    Method
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Method.MethodName)
                </dd>
                <dt class="col-sm-2">
                    Focus
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Focus.FocusName)
                </dd>
                <dt class="col-sm-2">
                    Turns Per Run
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.TurnsPerRun)
                </dd>

                <dt class="col-sm-2">
                    Gate Distance
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.GateDistance)
                </dd>
                <dt class="col-sm-2">
                    Freeruns
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Freeruns)
                </dd>
                <dt class="col-sm-2">
                    Runs
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Runs)
                </dd>
                <dt class="col-sm-2">
                    Completed Runs
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.CompletedRuns)
                </dd>
                <dt class="col-sm-2">
                    Approach To Task
                </dt>
                <dd class="col-sm-10">
                @{
                    switch (Model.Skiing.ApproachToTask)
                    {
                        case 1:
                            @Html.Raw("Terrible")
                            break;
                        case 2:
                            @Html.Raw("Bad")
                            break;
                        case 3:
                            @Html.Raw("Okay")
                            break;
                        case 4:
                            @Html.Raw("Good")
                            break;
                        case 5:
                            @Html.Raw("Awesome")
                            break;
                        default:
                            @Html.Raw("Unknown")
                            break;
                    }
                }
                </dd>
                <dt class="col-sm-2">
                    Goal
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Skiing.Goal)
                </dd>
            }
        </dl>
    </div>

    @if (Model.WorkoutExercises.Any())
    {
        <div>
            <h4>Exercises</h4>
            <table class="table">
                <thead>
                    <tr>
                        <th>Exercise</th>
                        <th class="iframe">Video</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.WorkoutExercises)
                    {
                        <tr >
                            <td>@Html.DisplayFor(modelItem => item.Exercise.ExerciseName)</td>
                            <td>
                                <!-- YouTube video iframe -->
                                @if (!string.IsNullOrEmpty(item.Exercise.VideoUrl))
                                {
                                    <iframe class="iframe" src="@item.Exercise.VideoUrl" frameborder="0" allowfullscreen></iframe>
                                }
                                else
                                {
                                    <p>No video available</p>
                                }
                            </td>
                            <td> <!-- Lägg till knappen här -->
                                <a asp-controller="Exercise" asp-action="Details" asp-route-id="@item.Exercise.Id">Details</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
            <div class="mt-2 d-flex align-items-center">
            <a asp-action="Index" class="d-flex align-items-center">
                <img class="mx-2" src="/Images/arrow.png" alt="">
                <span>Go Back</span>
            </a>
        </div>
</div>
